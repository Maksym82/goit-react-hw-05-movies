{"version":3,"file":"static/js/403.bd2629b6.chunk.js","mappings":"8PAEMA,EAAWC,EAAAA,EAAAA,GAAH,oIAQRC,EAAWD,EAAAA,EAAAA,GAAH,8JAQRE,EAAWF,EAAAA,EAAAA,IAAH,4CAIRG,EAAOH,EAAAA,EAAAA,EAAH,gD,SCwBV,MAxCA,WACI,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WACDL,IACLM,EAAAA,EAAAA,IAAcN,EAAS,WACpBO,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAIL,KACpBC,GAAQ,OAAIK,GACb,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,KAGA,0BACI,SAACL,EAAD,UACCQ,GACCA,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACP,UAACrB,EAAD,YACE,gBACEsB,IACEH,EACI,kCAAoCA,E,63EAG1CI,MAAM,KACNC,OAAO,MACPC,IAAKL,KAEP,UAACnB,EAAD,YACE,SAACC,EAAD,UAAOkB,IACNC,IAAa,uBAAIA,SAbPH,EADR,OAqBtB,C,uKCxCDQ,EAAAA,EAAAA,SAAAA,QAAyB,kDACzB,IAAMC,EAAU,CACZA,QAAS,CACLC,QAJQ,mCAKRC,SAAU,UAHlB,SAOeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC2BJ,EAAAA,EAAAA,IAAU,oBAAqBC,GAD1D,cACUI,EADV,yBAEWA,EAASC,KAAKC,SAFzB,kEAGE,SAEaC,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFAC2BT,EAAAA,EAAAA,IAAA,8BACIS,GACvBR,GAHR,cACUI,EADV,yBAKWA,EAASC,KAAKC,SALzB,2EAQeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiClB,GAAjC,uFAC2BQ,EAAAA,EAAAA,IAAA,iBAAoBR,GAAMS,GADrD,cACUI,EADV,yBAEWA,EAASC,MAFpB,2EAKevB,EAAc,EAAdA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BS,EAAImB,GAAjC,uFAC2BX,EAAAA,EAAAA,IAAA,gBACVR,EADU,YACJmB,GACfV,GAHR,cACUI,EADV,yBAKWA,EAASC,MALpB,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    justify-content: center;\n    padding: 15px;\n`;\n\nconst CastItem = styled.li`\n    display: flex;\n    width: calc((100% - 60px) / 5);\n    min-width: 170px;\n    font-size: 16px;\n    background-color: #f2eee6;\n`;\n\nconst CastText = styled.div`\n    padding: 10px;\n`;\n\nconst Name = styled.p`\n    font-weight: bold;\n`;\n\nexport { CastList, CastItem, CastText, Name };","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchAddition } from '../../services/api';\nimport photo from './photo.png';\nimport { CastList, CastItem, CastText, Name } from './Cast.styled';\n\nfunction Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    useEffect(() => {\n        if (!movieId) return;\n        fetchAddition(movieId, 'credits')\n          .then(res => {\n            const castArr = res.cast;\n            setCast([...castArr]);\n          })\n          .catch(err => console.log(err));\n    }, [movieId]);\n\n    return (\n        <div>\n            <CastList>\n            {cast &&\n              cast.map(({ id, profile_path, name, character }) => (\n                <CastItem key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? 'https://image.tmdb.org/t/p/w300' + profile_path\n                        : photo\n                    }\n                    width=\"80\"\n                    height=\"120\"\n                    alt={name}\n                  />\n                  <CastText>\n                    <Name>{name}</Name>\n                    {character && <p>{character}</p>}\n                  </CastText>\n                </CastItem>\n              ))}\n          </CastList>\n        </div>\n    );\n}\n\nexport default Cast;","import axios from \"axios\";\n\n\nconst API_KEY = '0888d5145581d4e91a57106a6f875732';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst options = {\n    options: {\n        api_key: API_KEY,\n        language: 'en-US',\n    }\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get('/trending/all/day', options);\n    return response.data.results;\n};\n\nasync function fetchMovieSearch(query) {\n    const response = await axios.get(\n        `/search/movie?query=${query}`,\n        options\n    );\n    return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n    const response = await axios.get(`/movie/${id}`, options);\n    return response.data;\n}\n\nasync function fetchAddition(id, param) {\n    const response = await axios.get(\n        `movie/${id}/${param}`,\n        options\n    );\n    return response.data;\n}\n\nexport {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n};"],"names":["CastList","styled","CastItem","CastText","Name","movieId","useParams","useState","cast","setCast","useEffect","fetchAddition","then","res","castArr","catch","err","console","log","map","id","profile_path","name","character","src","width","height","alt","axios","options","api_key","language","fetchTrendingMovies","response","data","results","fetchMovieSearch","query","fetchMovieDetails","param"],"sourceRoot":""}