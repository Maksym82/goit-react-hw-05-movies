{"version":3,"file":"static/js/437.b3c59409.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movie.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n    list-style: none;\n    padding: 0;\n`;\n\nconst MovieLink = styled(Link)`\n    font-size: 20px;\n    text-decoration: none;\n`;\n\nconst Button = styled.button`\n    width: 150px;\n    height: 50px;\n    background-color: blue;\n    color: white;\n    border-radius: 4px;\n    margin-bottom: 20px;\n`;\n\nexport { List, MovieLink, Button };\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, MovieLink } from './MovieList.styled';\nimport { BunnerFilms } from 'components/Layout/Layout.styled';\nimport question from '../MovieDescription/question.png';\nconst IMG_URL = `https://image.tmdb.org/t/p/w500`;\n\n\nfunction MoviesList(movies) {\n  const location = useLocation();\n  console.log(movies)\n  return (\n    <List>\n      {movies.movies.map(\n        ({ id, title, poster_path }) =>\n          title && (\n            <li key={id}>\n              \n              <MovieLink\n                key={id}\n                to={`/movies/${id}`}\n                state={{ from: location }}\n              >\n                <BunnerFilms src={poster_path ? `${IMG_URL}${poster_path}` : question } alt={title} />\n              </MovieLink>\n            </li>\n          )\n      )}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n        })\n    ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n    display: flex;\n    gap: 10px;\n    padding-top: 20px;\n`;\n\nconst Input = styled.input`\n    width: 300px;\n`;\n\nconst Button = styled.button`\n    padding: 5px;\n    border: 1px solid #978a8a;\n    border-radius: 2px;\n`;\n\nexport { Form, Input, Button };","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './Search.styled';\n\n\nfunction Search({ onSubmit }) {\n    let queryValue = '';\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        queryValue = form.elements.query.value;\n        onSubmit(queryValue);\n        form.reset();\n    };\n\n    return (\n        <>\n            <Form action='' onSubmit={handleSubmit}>\n                <Input type='text' name='query' defaultValue={queryValue} />\n                <Button type='submit'>Search</Button>\n            </Form>\n        </>\n    );\n}\n\nSearch.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;","import { useState, useEffect } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Search from 'components/Search/Search';\nimport { fetchMovieSearch } from '../services/api';\n\n\n\nfunction Movie() {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n    const handleSubmit = value => {\n        setSearchParams({ query: value });\n    };\n    \n    useEffect(() => {\n        if (!query) return;\n        setMovies([]);\n        const fetchRequestMovieSearch = async() => {\n            try {\n                const res = await fetchMovieSearch(query);\n                setMovies(prevState => [...prevState, ...res]);\n                \n            } catch (error) {\n                console.error('Not found')\n            }\n              }\n              fetchRequestMovieSearch();\n    }, [query]);\n \n    return (\n        <>\n            <Search location={location} onSubmit={handleSubmit} />\n            <MoviesList movies={movies} />\n        </>\n    );\n}\n\nexport default Movie;\n","import axios from \"axios\";\n\n\nconst API_KEY = '0888d5145581d4e91a57106a6f875732';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL_DETAILS = 'https://api.themoviedb.org/3/movie';\nconst params = {\n    params: {\n        api_key: API_KEY,\n        language: 'en-US',\n    }\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get(`${BASE_URL}`, params);\n    return response.data.results;\n};\n\nasync function fetchMovieSearch(query) {\n    const params = {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        }\n    };\n    const response = await axios.get(\n        `${BASE_URL_SEARCH}`,\n        params\n    );\n    return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n    const params = {\n        params: {\n            api_key: API_KEY,\n           \n        }\n    };\n    const response = await axios.get(`${BASE_URL_DETAILS}/${id}`, params);\n    return response.data;\n}\n\nasync function fetchAddition(id, param) {\n    const response = await axios.get(\n        `movie/${id}/${param}`,\n        params\n    );\n    return response.data;\n}\n\nexport {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n};"],"names":["List","styled","MovieLink","Link","Button","movies","location","useLocation","console","log","map","id","title","poster_path","to","state","from","src","question","alt","Form","Input","onSubmit","queryValue","action","event","preventDefault","form","currentTarget","elements","query","value","reset","type","name","defaultValue","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchRequestMovieSearch","fetchMovieSearch","res","prevState","error","API_KEY","axios","BASE_URL","BASE_URL_SEARCH","BASE_URL_DETAILS","params","api_key","language","fetchTrendingMovies","response","data","results","fetchMovieDetails","fetchAddition","param"],"sourceRoot":""}