{"version":3,"file":"static/js/490.036a0299.chunk.js","mappings":"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","sources":["components/MovieDescription/MovieDescription.styled.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\n\n\nconst Description = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  margin-top: 0;\n`;\n\nconst Text = styled.p`\n  text-align: justify;\n`;\n\nconst Addition = styled.div`\n  border-top: 1px solid gray;\n  border-bottom: 1px solid gray;\n`;\n\nconst AdditionList = styled.ul`\n  list-style: none;\n`;\n\nconst AdditionLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  margin-bottom: 10px;\n`;\n\nexport {\n  Container,\n\n  Description,\n  Title,\n  Text,\n  Addition,\n  AdditionList,\n  AdditionLink,\n};\n","import { useState, useEffect, Suspense } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { fetchMovieDetails } from '../services/api';\n\nimport { Addition, AdditionLink, AdditionList, Container, Description,  Text, Title } from \"components/MovieDescription/MovieDescription.styled\";\nimport question from '../components/MovieDescription/question.png';\n\nfunction MovieDetails() {\n    const [details, setDetails] = useState({});\n    const { movieId } = useParams(); \n\n    useEffect(() => {\n        if (!movieId) return;\n        \n        const fetchRequestDetails = async () => {\n            try {\n                const res = await fetchMovieDetails(movieId)\n              console.log(res);\n              setDetails(res);\n            } catch (error) {\n              console.error('Not found');\n            }\n          };\n          fetchRequestDetails();\n    }, [movieId]);\n    const { title, release_date, vote_average, overview, genres, poster_path } =\n    details;\n    const date = new Date(release_date).getFullYear();\n    \n    \n    return (\n        <>\n          \n            <>\n              <Container>\n                <img\n                  src={\n                    poster_path\n                      ? 'https://image.tmdb.org/t/p/w300' + poster_path\n                      : question\n                  }\n                  width={250}\n                  height={400}\n                  alt=\"poster\"\n                />\n                <Description>\n                  <Title>\n                    {title} ({date})\n                  </Title>\n                  <p>User score: {Math.round(vote_average * 10)}%</p>\n                  <h3>Overview</h3>\n                  <Text>{overview}</Text>\n                  <h3>Genres</h3>\n                  {genres\n                    ? genres.map(genre => genre.name + ' ')\n                    : 'Not information'}\n                </Description>\n              </Container>\n              <Addition>\n                <h3>Additional information</h3>\n                <AdditionList>\n                  <li>\n                    <AdditionLink to=\"cast\">Cast</AdditionLink>\n                  </li>\n                  <li>\n                    <AdditionLink to=\"review\">Review</AdditionLink>\n                  </li>\n                </AdditionList>\n              </Addition>\n            </>\n          \n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      );\n    }\n\n\nexport default MovieDetails;","import axios from \"axios\";\n\n\nconst API_KEY = '0888d5145581d4e91a57106a6f875732';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL_DETAILS = 'https://api.themoviedb.org/3/movie';\nconst params = {\n    params: {\n        api_key: API_KEY,\n        language: 'en-US',\n    }\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get(`${BASE_URL}`, params);\n    return response.data.results;\n};\n\nasync function fetchMovieSearch(query) {\n    const params = {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        }\n    };\n    const response = await axios.get(\n        `${BASE_URL_SEARCH}`,\n        params\n    );\n    return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n    const params = {\n        params: {\n            api_key: API_KEY,\n           \n        }\n    };\n    const response = await axios.get(`${BASE_URL_DETAILS}/${id}`, params);\n    return response.data;\n}\n\nasync function fetchAddition(id, param) {\n    const response = await axios.get(\n        `movie/${id}/${param}`,\n        params\n    );\n    return response.data;\n}\n\nexport {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n};"],"names":["Container","styled","Description","Title","Text","Addition","AdditionList","AdditionLink","NavLink","useState","details","setDetails","movieId","useParams","useEffect","fetchRequestDetails","fetchMovieDetails","res","console","log","error","title","release_date","vote_average","overview","genres","poster_path","date","Date","getFullYear","src","question","width","height","alt","Math","round","map","genre","name","to","Suspense","fallback","API_KEY","axios","BASE_URL","BASE_URL_SEARCH","BASE_URL_DETAILS","params","api_key","language","fetchTrendingMovies","response","data","results","fetchMovieSearch","query","id","fetchAddition","param"],"sourceRoot":""}