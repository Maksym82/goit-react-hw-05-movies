{"version":3,"file":"static/js/829.771311a6.chunk.js","mappings":"8PAEMA,EAAaC,EAAAA,EAAAA,GAAH,mEAKVC,EAAaD,EAAAA,EAAAA,GAAH,kIAQVE,EAAOF,EAAAA,EAAAA,EAAH,gDAIJG,EAAUH,EAAAA,EAAAA,EAAH,iD,SCkBb,MAhCA,WACE,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,IAAcN,EAAS,WACpBO,MAAK,SAAAC,GACJ,IAAMC,EAAYD,EAAIE,QACtBN,GAAW,OAAIK,GAChB,IACAE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACZ,KAGF,0BACI,SAACL,EAAD,UACCQ,EAAQY,OACPZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACtB,EAAD,YACE,UAACC,EAAD,sBAAeoB,MACf,SAACnB,EAAD,UAAUoB,MAFKF,EADP,KAOZ,uEAKT,C,uKCjCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cACA,wNALR,SASeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC2BN,EAAAA,EAAAA,IAAU,mCAAoCC,GADzE,cACUM,EADV,yBAEWA,EAASC,KAAKlB,SAFzB,kEAGE,SAEamB,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFAC2BV,EAAAA,EAAAA,IAAA,8BACIU,EADJ,mBAEnBT,GAHR,cACUM,EADV,yBAKWA,EAASC,KAAKlB,SALzB,2EAQeqB,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCd,GAAjC,uFAC2BG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,mBAAyCI,GADpE,cACUM,EADV,yBAEWA,EAASC,MAFpB,2EAKetB,EAAc,EAAdA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BW,EAAIe,GAAjC,uFAC2BZ,EAAAA,EAAAA,IAAA,gBACVH,EADU,YACJe,EADI,mBAEnBX,GAHR,cACUM,EADV,yBAKWA,EAASC,MALpB,kE","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst ReviewList = styled.li`\n    padding: 20px;\n    list-style: none;\n`;\n\nconst ReviewItem = styled.li`\nbackground-color: #f2eee6;\npadding: 25px;\nfont-size: 16px;\ntext-align: justify;\nmargin-bottom: 30px;\n`;\n\nconst Name = styled.p`\n    font-weight: bold;\n`;\n\nconst Comment = styled.p`\n    font-style: italic;\n`;\n\nexport { ReviewList, ReviewItem, Name, Comment };","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAddition } from '../../services/api';\nimport { ReviewList, ReviewItem, Name, Comment } from './Review.styled';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchAddition(movieId, 'reviews')\n      .then(res => {\n        const reviewArr = res.results;\n        setReviews([...reviewArr]);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <div>\n        <ReviewList>\n        {reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <Name>Author: {author}</Name>\n              <Comment>{content}</Comment>\n            </ReviewItem>\n          ))\n        ) : (\n          <div>We do not have  reviews for this movie</div>\n        )}\n        </ReviewList>\n    </div>\n  );\n}\n\nexport default Review;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization:\n        'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODg4ZDUxNDU1ODFkNGU5MWE1NzEwNmE2Zjg3NTczMiIsInN1YiI6IjY0ZjRiZGRjOWU0NTg2MDBhZDdmMzZjZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MR7j7j0anR-0y1CkqSWu6_5-5CNC_cl_ecbn99T0_48',\n    },\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get('/trending/all/day?language=en-US', options);\n    return response.data.results;\n};\n\nasync function fetchMovieSearch(query) {\n    const response = await axios.get(\n        `/search/movie?query=${query}&language=en-US`,\n        options\n    );\n    return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n    const response = await axios.get(`/movie/${id}?language=en-US`, options);\n    return response.data;\n}\n\nasync function fetchAddition(id, param) {\n    const response = await axios.get(\n        `movie/${id}/${param}?language=en-US`,\n        options\n    );\n    return response.data;\n}\n\nexport {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n};"],"names":["ReviewList","styled","ReviewItem","Name","Comment","movieId","useParams","useState","reviews","setReviews","useEffect","fetchAddition","then","res","reviewArr","results","catch","err","console","log","length","map","id","author","content","axios","options","method","headers","accept","Authorization","fetchTrendingMovies","response","data","fetchMovieSearch","query","fetchMovieDetails","param"],"sourceRoot":""}