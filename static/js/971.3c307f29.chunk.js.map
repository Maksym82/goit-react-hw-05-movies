{"version":3,"file":"static/js/971.3c307f29.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movie.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    list-style: none;\n    padding: 0;\n`;\n\nconst MovieLink = styled(Link)`\n    font-size: 20px;\n    text-decoration: none;\n`;\n\nexport { List, MovieLink };\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, MovieLink } from './MovieList.styled';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(\n        ({ id, title }) =>\n          title && (\n            <li key={id}>\n              <MovieLink\n                key={id}\n                to={`/movies/${id}`}\n                state={{ from: location }}\n              >\n                {title}\n              </MovieLink>\n            </li>\n          )\n      )}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n        })\n    ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n    display: flex;\n    gap: 10px;\n    padding-top: 20px;\n`;\n\nconst Input = styled.input`\n    width: 300px;\n`;\n\nconst Button = styled.button`\n    padding: 5px;\n    border: 1px solid #978a8a;\n    border-radius: 2px;\n`;\n\nexport { Form, Input, Button };","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './Search.styled';\n\n\nfunction Search({ onSubmit }) {\n    let queryValue = '';\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        queryValue = form.elements.query.value;\n        onSubmit(queryValue);\n        form.reset();\n    };\n\n    return (\n        <>\n            <Form action='' onSubmit={handleSubmit}>\n                <Input type='text' name='query' defaultValue={queryValue} />\n                <Button type='submit'>Search</Button>\n            </Form>\n        </>\n    );\n}\n\nSearch.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;","import { useState, useEffect } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Search from 'components/Search/Search';\nimport { fetchMovieSearch } from '../services/api';\n\n\nfunction Movie() {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n    const handleSubmit = value => {\n        setSearchParams({ query: value });\n    };\n\n    useEffect(() => {\n        if (!query) return;\n        fetchMovieSearch(query).then(res => setMovies([...res]));\n    }, [query]);\n\n    return (\n        <>\n            <Search location={location} onSubmit={handleSubmit} />\n            <MoviesList movies={movies} />\n        </>\n    );\n}\n\nexport default Movie;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization:\n        'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODg4ZDUxNDU1ODFkNGU5MWE1NzEwNmE2Zjg3NTczMiIsInN1YiI6IjY0ZjRiZGRjOWU0NTg2MDBhZDdmMzZjZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.MR7j7j0anR-0y1CkqSWu6_5-5CNC_cl_ecbn99T0_48',\n    },\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get('/trending/all/day?language=en-US', options);\n    return response.data.results;\n};\n\nasync function fetchMovieSearch(query) {\n    const response = await axios.get(\n        `/search/movie?query=${query}&language=en-US`,\n        options\n    );\n    return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n    const response = await axios.get(`/movie/${id}?language=en-US`, options);\n    return response.data;\n}\n\nasync function fetchAddition(id, param) {\n    const response = await axios.get(\n        `movie/${id}/${param}?language=en-US`,\n        options\n    );\n    return response.data;\n}\n\nexport {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n};"],"names":["List","styled","MovieLink","Link","movies","location","useLocation","map","id","title","to","state","from","Form","Input","Button","onSubmit","queryValue","action","event","preventDefault","form","currentTarget","elements","query","value","reset","type","name","defaultValue","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovieSearch","then","res","MoviesList","axios","options","method","headers","accept","Authorization","fetchTrendingMovies","response","data","results","fetchMovieDetails","fetchAddition","param"],"sourceRoot":""}