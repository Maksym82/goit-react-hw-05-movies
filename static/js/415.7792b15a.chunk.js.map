{"version":3,"file":"static/js/415.7792b15a.chunk.js","mappings":"2PAGMA,EAAOC,EAAAA,EAAAA,GAAH,yHAQJC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0EAKTG,EAASH,EAAAA,EAAAA,OAAH,gK,kHC2BZ,UApCA,WACE,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,MAFN,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,GACZJ,EAAUI,GAJO,gDAMjBC,QAAQE,MAAM,aANG,yDAAH,qDASlBL,GACD,GAAE,KAGD,iCACE,4CACA,SAAC,KAAD,UACGH,EAAOS,KACN,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACED,IACE,yBAEE,SAAC,KAAD,CAAoBE,GAAE,kBAAaH,GAAnC,UACA,SAAC,KAAD,CAAaI,IAAG,UA7BnB,mCA6BmB,OAAeF,GAAeG,IAAKJ,KADnCD,IAFTA,EAFb,QAaT,C,uKCtCKM,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAW,kDACXC,EAAkB,4CAClBC,EAAmB,qCACnBC,EAAS,CACXA,OAAQ,CACJC,QAASN,EACTO,SAAU,UAHlB,SAOenB,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC2Ba,EAAAA,EAAAA,IAAA,UAAaC,GAAYG,GADpD,cACUhB,EADV,yBAEWA,EAASmB,KAAKC,SAFzB,kEAGE,SAEaC,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,gFACUN,EAAS,CACXA,OAAQ,CACJC,QAASN,EACTO,SAAU,QACVI,MAAOA,IALnB,SAQ2BV,EAAAA,EAAAA,IAAA,UAChBE,GACHE,GAVR,cAQUhB,EARV,yBAYWA,EAASmB,KAAKC,SAZzB,4EAeeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiClB,GAAjC,gFACUW,EAAS,CACXA,OAAQ,CACJC,QAASN,IAHrB,SAO2BC,EAAAA,EAAAA,IAAA,UAAaG,EAAb,YAAiCV,GAAMW,GAPlE,cAOUhB,EAPV,yBAQWA,EAASmB,MARpB,4EAWeK,EAAc,EAAdA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BnB,EAAIoB,GAAjC,uFAC2Bb,EAAAA,EAAAA,IAAA,gBACVP,EADU,YACJoB,GACfT,GAHR,cACUhB,EADV,yBAKWA,EAASmB,MALpB,kE","sources":["components/MoviesList/MovieList.styled.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n    list-style: none;\n    padding: 0;\n`;\n\nconst MovieLink = styled(Link)`\n    font-size: 20px;\n    text-decoration: none;\n`;\n\nconst Button = styled.button`\n    width: 150px;\n    height: 50px;\n    background-color: blue;\n    color: white;\n    border-radius: 4px;\n    margin-bottom: 20px;\n`;\n\nexport { List, MovieLink, Button };\n","import { BunnerFilms } from 'components/Layout/Layout.styled';\nimport { List, MovieLink } from 'components/MoviesList/MovieList.styled';\nimport { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nconst IMG_URL = `https://image.tmdb.org/t/p/w500`;\n\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchRequest = async () => {\n      try {\n        const response = await fetchTrendingMovies();\n        console.log(response);\n        setMovies(response);\n      } catch (error) {\n        console.error('Not found');\n      }\n    };\n    fetchRequest();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <List>\n        {movies.map(\n          ({ id, title, poster_path }) =>\n            title && (\n              <li key={id}>\n                 \n                <MovieLink key={id} to={`/movies/${id}`}>\n                <BunnerFilms src={`${IMG_URL}${poster_path}`} alt={title} />\n                </MovieLink>\n              </li>\n            )\n        )}\n      </List>\n    </>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\n\n\nconst API_KEY = '0888d5145581d4e91a57106a6f875732';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst BASE_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL_DETAILS = 'https://api.themoviedb.org/3/movie';\nconst params = {\n    params: {\n        api_key: API_KEY,\n        language: 'en-US',\n    }\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get(`${BASE_URL}`, params);\n    return response.data.results;\n};\n\nasync function fetchMovieSearch(query) {\n    const params = {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        }\n    };\n    const response = await axios.get(\n        `${BASE_URL_SEARCH}`,\n        params\n    );\n    return response.data.results;\n}\n\nasync function fetchMovieDetails(id) {\n    const params = {\n        params: {\n            api_key: API_KEY,\n           \n        }\n    };\n    const response = await axios.get(`${BASE_URL_DETAILS}/${id}`, params);\n    return response.data;\n}\n\nasync function fetchAddition(id, param) {\n    const response = await axios.get(\n        `movie/${id}/${param}`,\n        params\n    );\n    return response.data;\n}\n\nexport {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n};"],"names":["List","styled","MovieLink","Link","Button","useState","movies","setMovies","useEffect","fetchRequest","fetchTrendingMovies","response","console","log","error","map","id","title","poster_path","to","src","alt","API_KEY","axios","BASE_URL","BASE_URL_SEARCH","BASE_URL_DETAILS","params","api_key","language","data","results","fetchMovieSearch","query","fetchMovieDetails","fetchAddition","param"],"sourceRoot":""}